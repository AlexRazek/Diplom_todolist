name: Build and deploy actions
on: [push]
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: clone code
        uses: actions/checkout@v2
      - name: docker build
        run: docker build -t alexrazek/todolist_alex:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
      - name: docker login
        run: echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: docker push
        run: docker push alexrazek/todolist_alex:$GITHUB_REF_NAME-$GITHUB_RUN_ID
      - name: docker remove
        run: docker image prune -a -f alexrazek/todolist_alex:$GITHUB_REF_NAME-$GITHUB_RUN_ID
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    env:
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      VK_OAUTH2_KEY: ${{secrets.VK_OAUTH2_KEY}}
      VK_OAUTH2_SECRET: ${{secrets.VK_OAUTH2_SECRET}}
#      BOT_TOKEN: ${{secrets.BOT_TOKEN}}

    steps:
      - name: clone code
        uses: actions/checkout@v2
      - name: render configs
        run: |
          mkdir -p deploy
          cat docker-compose-ci.yaml | envsubst > deploy/docker-compose.yaml
          cat .env_ci | envsubst > deploy/.env
      - name: clone files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: "deploy/*"
          target: "todolist"
          strip_components: 1
      - name: run docker-compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd todolist
            echo ${{ secrets.SSH_PASSWORD }} | sudo -S docker-compose up -d

    # TODO: Step for cleaning after deploy
    # docker image prune -a -f

            
            



